edition: 1.0.0
name: cdn-backup-origin
access: '{{ access }}'

vars:
  region: '{{ region }}'
  environmentVariables: 
    ORIGIN: '{{ origin }}'
    BACKUP_ORIGIN: '{{ backupOrigin }}'
    {{if warmupDomain !== ''}}
    WARMUP_DOMAIN: '{{ warmupDomain }}'
    {{/if}}
  service:
    name: '{{ serviceName }}'
    internetAccess: true
    role: '{{ roleArn }}'

services:
  cron_cdn_backup:
    component: devsapp/fc
    actions:       # 自定义执行逻辑，关于actions 的使用，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#行为描述
      pre-deploy: # 在deploy之前运行
        - component: fc build --use-docker
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: '{{ functionName }}'
        environmentVariables: ${vars.environmentVariables}
        handler: index.handler
        instanceConcurrency: 1
        instanceType: e1
        memorySize: 3072
        runtime: python3
        timeout: 3600
        codeUri: ./code
        initializer: index.initialize
        initializationTimeout: 60
        asyncConfiguration:
          maxAsyncEventAgeInSeconds: 1200
          maxAsyncRetryAttempts: 0
          statefulInvocation: true
        instanceLifecycleConfig:
          preStop:
            handler: index.preStop
            timeout: 60
      triggers:
        - name: cron
          type: timer
          qualifier: LATEST
          config:
            payload: ''
            cronExpression: '{{ cronExpression }}'
            enable: {{ enable }}
